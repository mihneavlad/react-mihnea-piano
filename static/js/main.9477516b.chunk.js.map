{"version":3,"sources":["DimensionsProvider.js","SoundfontProvider.js","index.js"],"names":["DimensionsProvider","console","log","this","props","react_default","a","createElement","children","containerWidth","containerHeight","React","Component","Dimensions","SoundfontProvider","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","loadInstrument","instrumentName","setState","instrument","Soundfont","audioContext","format","soundfont","nameToUrl","name","concat","hostname","then","playNote","midiNumber","resume","audioNode","state","play","activeAudioNodes","assign","defineProperty","stopNote","stop","stopAllNotes","values","forEach","node","prevProps","prevState","render","isLoading","defaultProps","library","add","faPlayCircle","faKey","window","AudioContext","webkitAudioContext","soundfontHostname","noteRange","first","MidiNumbers","fromNote","last","recordAudio","Promise","_ref","asyncToGenerator","regenerator_default","mark","_callee","resolve","stream","mediaRecorder","recording","wrap","_context","prev","next","navigator","mediaDevices","getUserMedia","audio","sent","MediaRecorder","addEventListener","event","push","data","recordingBlob","Blob","audioUrl","URL","createObjectURL","Audio","start","_x","apply","arguments","App","recorder","player","playing","startRecording","_callee2","_context2","stopRecording","_callee3","_context3","playRecording","className","ResponsivePiano","reactstrap_es","id","onClick","disabled","index_es","icon","faDotCircle","faStopCircle","src_DimensionsProvider","_ref4","src_SoundfontProvider","_ref5","react_piano_esm","width","rootElement","document","getElementById","ReactDOM","src_App"],"mappings":"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","file":"static/js/main.9477516b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Dimensions from \"react-dimensions\";\r\n\r\nclass DimensionsProvider extends React.Component {\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <div>\r\n        {this.props.children({\r\n          containerWidth: this.props.containerWidth,\r\n          containerHeight: this.props.containerHeight\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dimensions()(DimensionsProvider);\r\n","// See https://github.com/danigb/soundfont-player\r\n// for more documentation on prop options.\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Soundfont from \"soundfont-player\";\r\n\r\nclass SoundfontProvider extends React.Component {\r\n  static propTypes = {\r\n    instrumentName: PropTypes.string.isRequired,\r\n    hostname: PropTypes.string.isRequired,\r\n    format: PropTypes.oneOf([\"mp3\", \"ogg\"]),\r\n    soundfont: PropTypes.oneOf([\"MusyngKite\", \"FluidR3_GM\"]),\r\n    audioContext: PropTypes.instanceOf(window.AudioContext),\r\n    render: PropTypes.func\r\n  };\r\n\r\n  static defaultProps = {\r\n    format: \"mp3\",\r\n    soundfont: \"MusyngKite\",\r\n    instrumentName: \"acoustic_grand_piano\"\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeAudioNodes: {},\r\n      instrument: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadInstrument(this.props.instrumentName);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.instrumentName !== this.props.instrumentName) {\r\n      this.loadInstrument(this.props.instrumentName);\r\n    }\r\n  }\r\n\r\n  loadInstrument = instrumentName => {\r\n    // Re-trigger loading state\r\n    this.setState({\r\n      instrument: null\r\n    });\r\n    Soundfont.instrument(this.props.audioContext, instrumentName, {\r\n      format: this.props.format,\r\n      soundfont: this.props.soundfont,\r\n      nameToUrl: (name, soundfont, format) => {\r\n        return `${this.props.hostname}/${soundfont}/${name}-${format}.js`;\r\n      }\r\n    }).then(instrument => {\r\n      this.setState({\r\n        instrument\r\n      });\r\n    });\r\n  };\r\n\r\n  playNote = midiNumber => {\r\n    this.props.audioContext.resume().then(() => {\r\n      const audioNode = this.state.instrument.play(midiNumber);\r\n      this.setState({\r\n        activeAudioNodes: Object.assign({}, this.state.activeAudioNodes, {\r\n          [midiNumber]: audioNode\r\n        })\r\n      });\r\n    });\r\n  };\r\n\r\n  stopNote = midiNumber => {\r\n    this.props.audioContext.resume().then(() => {\r\n      if (!this.state.activeAudioNodes[midiNumber]) {\r\n        return;\r\n      }\r\n      const audioNode = this.state.activeAudioNodes[midiNumber];\r\n      audioNode.stop();\r\n      this.setState({\r\n        activeAudioNodes: Object.assign({}, this.state.activeAudioNodes, {\r\n          [midiNumber]: null\r\n        })\r\n      });\r\n    });\r\n  };\r\n\r\n  // Clear any residual notes that don't get called with stopNote\r\n  stopAllNotes = () => {\r\n    this.props.audioContext.resume().then(() => {\r\n      const activeAudioNodes = Object.values(this.state.activeAudioNodes);\r\n      activeAudioNodes.forEach(node => {\r\n        if (node) {\r\n          node.stop();\r\n        }\r\n      });\r\n      this.setState({\r\n        activeAudioNodes: {}\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return this.props.render({\r\n      isLoading: !this.state.instrument,\r\n      playNote: this.playNote,\r\n      stopNote: this.stopNote,\r\n      stopAllNotes: this.stopAllNotes\r\n    });\r\n  }\r\n}\r\n\r\nexport default SoundfontProvider;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Piano, MidiNumbers } from \"react-piano\";\r\nimport \"react-piano/dist/styles.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Button, ButtonGroup } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport DimensionsProvider from \"./DimensionsProvider\";\r\nimport SoundfontProvider from \"./SoundfontProvider\";\r\nimport \"./index.css\";\r\n\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faPlayCircle,\r\n  faStopCircle,\r\n  faDotCircle,\r\n  faKey\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlibrary.add(faPlayCircle, faKey);\r\n\r\n// webkitAudioContext fallback needed to support Safari\r\nconst audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\nconst soundfontHostname = \"https://d1pzp51pvbm36p.cloudfront.net\";\r\n\r\nconst noteRange = {\r\n  first: MidiNumbers.fromNote(\"c1\"),\r\n  last: MidiNumbers.fromNote(\"g3\")\r\n};\r\n\r\nconst recordAudio = () =>\r\n  new Promise(async resolve => {\r\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n    const mediaRecorder = new MediaRecorder(stream);\r\n    const recording = [];\r\n\r\n    mediaRecorder.addEventListener(\"dataavailable\", event => {\r\n      recording.push(event.data);\r\n\r\n      console.log(event.data);\r\n    });\r\n\r\n    const start = () => mediaRecorder.start();\r\n\r\n    const stop = () =>\r\n      new Promise(resolve => {\r\n        mediaRecorder.addEventListener(\"stop\", () => {\r\n          const recordingBlob = new Blob(recording);\r\n          const audioUrl = URL.createObjectURL(recordingBlob);\r\n          const audio = new Audio(audioUrl);\r\n          const play = () => audio.play();\r\n          resolve({ recordingBlob, audioUrl, play });\r\n        });\r\n\r\n        mediaRecorder.stop();\r\n      });\r\n\r\n    resolve({ start, stop });\r\n  });\r\n\r\n// Setting initial state, setting states for the various scenarios, start recording, stop recording, play recording.\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    recorder: {},\r\n    player: {},\r\n    recording: false,\r\n    playing: false\r\n  };\r\n\r\n  startRecording = async () => {\r\n    const recorder = await recordAudio();\r\n    recorder.start();\r\n    this.setState({\r\n      recorder: recorder,\r\n      recording: true\r\n    });\r\n  };\r\n\r\n  stopRecording = async () => {\r\n    const audio = await this.state.recorder.stop();\r\n\r\n    this.setState({\r\n      player: audio,\r\n      recording: false\r\n    });\r\n  };\r\n\r\n  playRecording = () => {\r\n    if (this.state.player.play) {\r\n      this.state.player.play();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"text-center mt-5\">React Piano App by Mihnea</h1>\r\n\r\n        <div className=\"mt-5 text-center\">\r\n          <p>\r\n            This is a piano app based on the react-piano package and the\r\n            MediaStream Recording API !\r\n          </p>\r\n          <ResponsivePiano />\r\n          <ButtonGroup className=\"d-flex justify-content-around\">\r\n            <Button\r\n              className=\"mt-5\"\r\n              id=\"record\"\r\n              onClick={this.startRecording}\r\n              disabled={this.state.recording}\r\n            >\r\n              <span className=\"far fa-icons fa-6x glyphicon\">\r\n                <FontAwesomeIcon icon={faDotCircle} />\r\n              </span>\r\n            </Button>\r\n            <Button\r\n              className=\"mt-5\"\r\n              id=\"stop\"\r\n              onClick={this.stopRecording}\r\n              disabled={!this.state.recording}\r\n            >\r\n              <span className=\"far fa-icons fa-6x glyphicon\">\r\n                <FontAwesomeIcon icon={faStopCircle} />\r\n              </span>\r\n            </Button>\r\n            <Button\r\n              className=\"mt-5\"\r\n              id=\"play\"\r\n              onClick={this.playRecording}\r\n              disabled={\r\n                this.state.recording ||\r\n                this.state.playing ||\r\n                !this.state.player.play\r\n              }\r\n            >\r\n              <span className=\"far fa-icons fa-6x glyphicon\">\r\n                <FontAwesomeIcon icon={faPlayCircle} />\r\n              </span>\r\n            </Button>\r\n          </ButtonGroup>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction ResponsivePiano(props) {\r\n  return (\r\n    <DimensionsProvider>\r\n      {({ containerWidth, containerHeight }) => (\r\n        <SoundfontProvider\r\n          // instrumentName=\"acoustic_grand_piano\"\r\n          audioContext={audioContext}\r\n          hostname={soundfontHostname}\r\n          render={({ isLoading, playNote, stopNote }) => (\r\n            <Piano\r\n              noteRange={noteRange}\r\n              width={containerWidth}\r\n              playNote={playNote}\r\n              stopNote={stopNote}\r\n              disabled={isLoading}\r\n              {...props}\r\n            />\r\n          )}\r\n        />\r\n      )}\r\n    </DimensionsProvider>\r\n  );\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}